{"version":3,"sources":["../src/index.js"],"names":["CubeGallery","id","minHeight","margin","gallery","document","querySelector","images","querySelectorAll","nbImages","length","extra","findExtraWidth","applyStyle","window","addEventListener","create","counter","forEach","call","img","complete","prototype","loadVariableDatas","galleryWidth","offsetWidth","width","Math","floor","naturalWidth","naturalHeight","height","style","fontSize","lineHeight","hasWrapper","wrapper","a","display","position","elm","borders","getComputedStyle","borderLeft","Number","borderLeftWidth","substr","borderRight","borderRightWidth","generate","rows","imgs","sumOfWidth","i","currentImg","nextImg","undefined","push"],"mappings":"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","file":"cube-gallery.js","sourcesContent":["class CubeGallery {\n\n    constructor(id, { minHeight, margin }) {\n        // selector\n        this.id = id\n        \n        // min height\n        this.minHeight = minHeight && minHeight > 0 ? minHeight : 150\n        \n        // margin\n        this.margin = margin && margin > 0 ? margin : 0\n\n        // gallery container\n        this.gallery = document.querySelector(`#${ this.id }`)\n\n        // gallery images\n        this.images = document.querySelectorAll(`#${ this.id } img`)\n\n        // count images\n        this.nbImages = this.images.length\n\n        // extra borders or padding or margins that can be added with css\n        this.extra = 0\n\n        /**\n         * Find images CSS properties that can affect gallery calculation\n         */\n        this.findExtraWidth(this.images[0])\n        \n        /**\n         * Apply CSS style\n         */\n        this.applyStyle()\n        \n        /**\n         * Handle responsive\n         */\n        window.addEventListener('resize', () => {\n            this.create()\n        })\n\n        /**\n         * Wait for all images load before creating gallery\n         */\n        var counter = 0\n        var create = () => {\n            if (counter === this.nbImages) {\n                this.create()\n            }\n        }\n\n        this.images.forEach.call(this.images, function(img) {\n            if (img.complete) {\n                counter++;\n                create()\n            }\n            else {\n                img.addEventListener('load', () => {\n                    counter++;\n                    create()\n                }, false)\n            }\n        })\n    }\n}\n\n\n/**\n * Data that may change\n */\nCubeGallery.prototype.loadVariableDatas = function () {\n    // gallery width\n    this.galleryWidth = this.gallery.offsetWidth\n\n    // images\n    this.images.forEach(img => {\n        img.width = Math.floor(img.naturalWidth * this.minHeight / img.naturalHeight), // default width\n        img.height = this.minHeight // default height\n    })\n}\n\n\n/**\n * Apply CSS properties\n */\nCubeGallery.prototype.applyStyle = function () {\n    /**\n     * Remove white spaces\n     */\n    this.gallery.style.fontSize = '0' // remove white spaces\n    this.gallery.style.lineHeight = '0' // remove white spaces\n\n    /**\n     * Apply display inline block\n     */\n    if (this.hasWrapper()) {\n        let wrapper = document.querySelectorAll(`#${ this.id } a`)\n        \n        this.findExtraWidth(wrapper[0]) // find wrapper CSS properties that can affect gallery calculation\n\n        wrapper.forEach(a => {\n            a.style.display = 'inline-block'\n            a.style.position = 'relative'\n        })\n    }\n}\n\n\n/**\n * Check if img is wrapped by a tag\n */\nCubeGallery.prototype.hasWrapper = function () {\n    if (document.querySelectorAll(`#${ this.id } a`).length > 0) {\n        return true\n    }\n\n    return false\n}\n\n\n/**\n * Find CSS properties that can affect gallery calculation and add it as extra width\n * @param {*} elm\n */\nCubeGallery.prototype.findExtraWidth = function (elm) {\n    let borders = getComputedStyle(elm)\n    let borderLeft = Number(borders.borderLeftWidth.substr(0, borders.borderLeftWidth.length - 2))\n    let borderRight = Number(borders.borderRightWidth.substr(0, borders.borderLeftWidth.length - 2))\n    this.extra = this.extra + borderLeft + borderRight\n}\n\n\n/**\n * Generate the gallery\n */\nCubeGallery.prototype.generate = function () { \n    var rows = []\n    var imgs = []\n    var sumOfWidth = 0 // sum of the width of the images\n    for (let i = 0; i < this.nbImages; i++) {\n        let currentImg = this.images[i]\n        let nextImg = this.images[i+1] != undefined ? this.images[i+1] : null\n\n        sumOfWidth = Math.floor(sumOfWidth + currentImg.width)\n\n        imgs.push(currentImg)\n\n        if (nextImg == null || Math.floor(sumOfWidth + nextImg.width) > this.galleryWidth) { // if row is filled\n            rows.push(imgs)\n            sumOfWidth = 0\n            imgs = []\n        }\n    }\n\n    rows.forEach(imgs => {\n        let sumOfWidth = 0 // sum of the width of the images\n        imgs.forEach(img => sumOfWidth = Math.floor(sumOfWidth + img.width))\n        imgs.forEach(img => {\n            img.width = Math.floor((img.width * (img.height * this.galleryWidth / sumOfWidth) / img.height) - (this.margin * 2) - this.extra)\n            img.height = Math.floor((img.height * this.galleryWidth / sumOfWidth) - (this.margin * 2) - this.extra)\n            img.style.margin = this.margin + 'px'\n        })\n    })\n\n    return this\n}\n\n\n/**\n * Create the gallery\n */\nCubeGallery.prototype.create = function () {\n    this.loadVariableDatas()\n    return this.generate()\n}"]}