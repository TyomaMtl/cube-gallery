{"version":3,"sources":["../src/index.js"],"names":["CubeGallery","id","minHeight","margin","unit","gallery","document","querySelector","style","fontSize","lineHeight","loadData","window","addEventListener","resize","galleryWidth","offsetWidth","images","querySelectorAll","forEach","img","width","Math","floor","naturalWidth","naturalHeight","height","nbImages","length","prototype","create","rows","imgs","sumOfWidth","i","currentImg","nextImg","undefined","push"],"mappings":"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","file":"cube-gallery.js","sourcesContent":["class CubeGallery {\n    constructor(id, { minHeight, margin }) {\n        // selector\n        this.id = id\n        // min height\n        this.minHeight = minHeight && minHeight > 0 ? minHeight : 150\n        // unit\n        this.unit = 'px'\n        // margin\n        this.margin = margin && margin > 0 ? margin : 0\n        \n        // gallery container\n        this.gallery = document.querySelector(`#${ this.id }`)\n        this.gallery.style.fontSize = '0' // remove white spaces\n        this.gallery.style.lineHeight = '0' // remove white spaces\n\n        // variable data\n        this.loadData()\n        \n        window.addEventListener('resize', () => {\n            this.resize()\n        })\n    }\n\n    loadData () {\n        // gallery width\n        this.galleryWidth = this.gallery.offsetWidth\n\n        // images\n        this.images = document.querySelectorAll(`#${ this.id } img`)\n        this.images.forEach(img => {\n            img.width = Math.floor(img.naturalWidth * this.minHeight / img.naturalHeight), // default width\n            img.height = this.minHeight // default height\n        })\n        // count images\n        this.nbImages = this.images.length\n    }\n}\n\nCubeGallery.prototype.resize = function () {\n    this.loadData()\n    return this.create()\n}\n\nCubeGallery.prototype.create = function () { \n    var rows = []\n    var imgs = []\n    var sumOfWidth = 0 // sum of the width of the images\n    for (let i = 0; i < this.nbImages; i++) {\n        let currentImg = this.images[i]\n        let nextImg = this.images[i+1] != undefined ? this.images[i+1] : null\n\n        sumOfWidth = Math.floor(sumOfWidth + currentImg.width)\n\n        imgs.push(currentImg)\n\n        if (nextImg == null || Math.floor(sumOfWidth + nextImg.width) > this.galleryWidth) { // if row is filled\n            rows.push(imgs)\n            sumOfWidth = 0\n            imgs = []\n        }\n    }\n\n    rows.forEach(imgs => {\n        let sumOfWidth = 0 // sum of the width of the images\n        imgs.forEach(img => sumOfWidth = Math.floor(sumOfWidth + img.width))\n        imgs.forEach(img => {\n            img.width = Math.floor((img.width * (img.height * this.galleryWidth / sumOfWidth) / img.height) - this.margin * 2)\n            img.height = Math.floor((img.height * this.galleryWidth / sumOfWidth) - this.margin * 2)\n            img.style.margin = this.margin + 'px'\n        })\n    })\n\n    return this\n}"]}